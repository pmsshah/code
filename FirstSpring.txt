* New project
	Spring intializer, 
		Spring Web
		com.shah
		FirstApp
		java version 8
	https://start.spring.io/
		Spring Web
		unzip.

* Add RestController.
	Add Java Class HelloController
	Add @RestController class annotation.
	Add method sayHello return "Hello"
	Add @RequestMapping("/hello") method annotation.
	
	Test Run and browse 127.0.0.1:8080/hello it should work.
		Whitelabel Error Page means, mapping is not done.

* Add Service
	Add package code.demo.shah.service
	Add class HelloService 
	Add @Service class annotation.
	Add method sayHello return "say hello from servie"
	
	Within HelloControler 
	Add object HelloService helloService
	Add method annotation @Autowirded
	Add method sayHelloSvc return helloService.sayHello() 
	Add method @RequestMapping("/hellosvc")
	
	Test Run and browse 127.0.0.1:8080/hellosvc it should work.
	Whitelabel Error Page means, maping is not done.

* Add Repository
	Add package code.demo.shah.model
	Add class Hello
		Add private String from, to, text. 
		Generate construct/getter/setter/tostring.
	Add package code.demo.shah.repository
	Add class HelloRepository add class mapping @Repository.
		Add private List<Hello> helloList = new ArrayList<>(
			Array.aslist (
				new Hello("john", "paul", "helllo paull")
				new Hello("man", "woman", "helllo woman")
			))
		Add method List<Hello> getHelloList() return helloList; 
	modify HelloService
		Add HelloRepositorey hellorespositrey @autowired.
		Add method List<Hello> getHelloList() { return hellorespositrey.getHelloLList } @RequestMapping("/hellorepo")
		
	Test Run and browse 127.0.0.1:8080/hellorepo it should work.
	Whitelabel Error Page means, maping is not done.

* Add Mongodb
	Modify Hello 
	Add annotation @Id for object "from"
	Add interface HelloMongoRepository extends MongoRepository<Hello, String>
		Add import org.springframework.data.mongodb.repository.MongoRepository;
		Add class annotation @Repository
	Modify HelloService
		Add HelloMongoRepository with object annotation @Autowired
		Add addMoHelloList to add Hello Objects to Mongo
		Add getMoHelloList to retrive data from Mongo
	Modify HelloController
		Add addMoHelloList with @RequestMapping("/hellomoadd")
		Add getMoHelloList with @RequestMapping("/hellomoget")
	
* Add FreeMarker with greeting.
	Add package controller
		Rename HelloController to HelloRestController and move to package.
		Add HelloUIController with class annotation @Controller
		Add method public String greeting(@PathVariable String input, Model model)
			with method annotation @GetMapping("/greeting/{input}")
			with return "welcome"
	Add pom.xml
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
	Add application.properties
		spring.freemarker.enabled=true
		spring.freemarker.suffix = .ftl
		spring.thymeleaf.enabled=false
	Add welcome.html and rename as welcome.ftl
		add <h1> ${message} </h1>

* Add FreeMarker with more.
	Modify HelloUIController
		Add HelloService helloService with object annotation @Autowired
		Add public String listall(Model model) with annotation "listall"
			return Hello from mongoDb
	Add userlist.html and rename userlist.ftl
		Add table
		    <#list users as user>
		      <tr>
		        <td>${user.from}</td>
		        <td>${user.to}</td>
		        <td>${user.text}</td>
		      </tr>
		    </#list>


* Test
	* http://127.0.0.1:8080/listall
	* http://127.0.0.1:8080/greeting/Piyush
	* http://127.0.0.1:8080/hellomoadd
	* http://127.0.0.1:8080/hellomoget
	* http://127.0.0.1:8080/hellorepo
	* http://127.0.0.1:8080/hellosvc
	* http://127.0.0.1:8080/hello
